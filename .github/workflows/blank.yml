name: Haskell CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build_and_compress:
    name: Build and Compress
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Haskell Stack
        uses: actions/cache@v2
        with:
          path: |
            ~/.stack
            .stack-work
          key: ${{ runner.os }}-stack-${{ hashFiles('**/stack.yaml.lock') }}
          restore-keys: |
            ${{ runner.os }}-stack-

      - name: Setup Haskell GHC
        uses: haskell/actions/setup@v1
        with:
          ghc-version: 'latest'
          stack-version: 'latest'

      - name: Build with Make
        run: make

      - name: Run Tests
        run: |
          cd test
          python3 functional_tests.py

      - name: Compress Binary and Documentation
        run: tar -czvf gladdos.tar.gz gladdos

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: gladdos-package
          path: gladdos.tar.gz

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: build_and_compress
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Push to mirror repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: git@github.com:EpitechPromo2026/B-FUN-500-MPL-5-1-glados-quentin.aumas.git
          ssh_private_key: ${{ secrets.GITLAB_SSH_PRIVATE_KEY }}

  release:
    needs: build_and_compress
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: gladdos-package
          path: release

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
        with:
          tag_name: build-${{ github.run_id }}
          release_name: Release build-${{ github.run_id }}
          body: Description of the release build-${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/gladdos.tar.gz
          asset_name: gladdos.tar.gz
          asset_content_type: application/gzip
